/**
 * Copyright (c) 2014-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 */

 // @Generated by gentest/gentest.rb from gentest/fixtures/CSSLayoutMinMaxDimensionTest.html

#include <CSSLayout/CSSLayout.h>
#include <gtest/gtest.h>

TEST(CSSLayoutTest, max_width) {
  const CSSNodeRef root = CSSNodeNew();
  CSSNodeStyleSetWidth(root, 100);
  CSSNodeStyleSetHeight(root, 100);

  const CSSNodeRef root_child0 = CSSNodeNew();
  CSSNodeStyleSetMaxWidth(root_child0, 50);
  CSSNodeStyleSetHeight(root_child0, 10);
  CSSNodeInsertChild(root, root_child0, 0);
  CSSNodeCalculateLayout(root, YGUndefined, YGUndefined, YGDirectionLTR);

  ASSERT_FLOAT_EQ(0, CSSNodeLayoutGetLeft(root));
  ASSERT_FLOAT_EQ(0, CSSNodeLayoutGetTop(root));
  ASSERT_FLOAT_EQ(100, CSSNodeLayoutGetWidth(root));
  ASSERT_FLOAT_EQ(100, CSSNodeLayoutGetHeight(root));

  ASSERT_FLOAT_EQ(0, CSSNodeLayoutGetLeft(root_child0));
  ASSERT_FLOAT_EQ(0, CSSNodeLayoutGetTop(root_child0));
  ASSERT_FLOAT_EQ(50, CSSNodeLayoutGetWidth(root_child0));
  ASSERT_FLOAT_EQ(10, CSSNodeLayoutGetHeight(root_child0));

  CSSNodeCalculateLayout(root, YGUndefined, YGUndefined, YGDirectionRTL);

  ASSERT_FLOAT_EQ(0, CSSNodeLayoutGetLeft(root));
  ASSERT_FLOAT_EQ(0, CSSNodeLayoutGetTop(root));
  ASSERT_FLOAT_EQ(100, CSSNodeLayoutGetWidth(root));
  ASSERT_FLOAT_EQ(100, CSSNodeLayoutGetHeight(root));

  ASSERT_FLOAT_EQ(50, CSSNodeLayoutGetLeft(root_child0));
  ASSERT_FLOAT_EQ(0, CSSNodeLayoutGetTop(root_child0));
  ASSERT_FLOAT_EQ(50, CSSNodeLayoutGetWidth(root_child0));
  ASSERT_FLOAT_EQ(10, CSSNodeLayoutGetHeight(root_child0));

  CSSNodeFreeRecursive(root);
}

TEST(CSSLayoutTest, max_height) {
  const CSSNodeRef root = CSSNodeNew();
  CSSNodeStyleSetFlexDirection(root, YGFlexDirectionRow);
  CSSNodeStyleSetWidth(root, 100);
  CSSNodeStyleSetHeight(root, 100);

  const CSSNodeRef root_child0 = CSSNodeNew();
  CSSNodeStyleSetWidth(root_child0, 10);
  CSSNodeStyleSetMaxHeight(root_child0, 50);
  CSSNodeInsertChild(root, root_child0, 0);
  CSSNodeCalculateLayout(root, YGUndefined, YGUndefined, YGDirectionLTR);

  ASSERT_FLOAT_EQ(0, CSSNodeLayoutGetLeft(root));
  ASSERT_FLOAT_EQ(0, CSSNodeLayoutGetTop(root));
  ASSERT_FLOAT_EQ(100, CSSNodeLayoutGetWidth(root));
  ASSERT_FLOAT_EQ(100, CSSNodeLayoutGetHeight(root));

  ASSERT_FLOAT_EQ(0, CSSNodeLayoutGetLeft(root_child0));
  ASSERT_FLOAT_EQ(0, CSSNodeLayoutGetTop(root_child0));
  ASSERT_FLOAT_EQ(10, CSSNodeLayoutGetWidth(root_child0));
  ASSERT_FLOAT_EQ(50, CSSNodeLayoutGetHeight(root_child0));

  CSSNodeCalculateLayout(root, YGUndefined, YGUndefined, YGDirectionRTL);

  ASSERT_FLOAT_EQ(0, CSSNodeLayoutGetLeft(root));
  ASSERT_FLOAT_EQ(0, CSSNodeLayoutGetTop(root));
  ASSERT_FLOAT_EQ(100, CSSNodeLayoutGetWidth(root));
  ASSERT_FLOAT_EQ(100, CSSNodeLayoutGetHeight(root));

  ASSERT_FLOAT_EQ(90, CSSNodeLayoutGetLeft(root_child0));
  ASSERT_FLOAT_EQ(0, CSSNodeLayoutGetTop(root_child0));
  ASSERT_FLOAT_EQ(10, CSSNodeLayoutGetWidth(root_child0));
  ASSERT_FLOAT_EQ(50, CSSNodeLayoutGetHeight(root_child0));

  CSSNodeFreeRecursive(root);
}

TEST(CSSLayoutTest, min_height) {
  const CSSNodeRef root = CSSNodeNew();
  CSSNodeStyleSetWidth(root, 100);
  CSSNodeStyleSetHeight(root, 100);

  const CSSNodeRef root_child0 = CSSNodeNew();
  CSSNodeStyleSetFlexGrow(root_child0, 1);
  CSSNodeStyleSetMinHeight(root_child0, 60);
  CSSNodeInsertChild(root, root_child0, 0);

  const CSSNodeRef root_child1 = CSSNodeNew();
  CSSNodeStyleSetFlexGrow(root_child1, 1);
  CSSNodeInsertChild(root, root_child1, 1);
  CSSNodeCalculateLayout(root, YGUndefined, YGUndefined, YGDirectionLTR);

  ASSERT_FLOAT_EQ(0, CSSNodeLayoutGetLeft(root));
  ASSERT_FLOAT_EQ(0, CSSNodeLayoutGetTop(root));
  ASSERT_FLOAT_EQ(100, CSSNodeLayoutGetWidth(root));
  ASSERT_FLOAT_EQ(100, CSSNodeLayoutGetHeight(root));

  ASSERT_FLOAT_EQ(0, CSSNodeLayoutGetLeft(root_child0));
  ASSERT_FLOAT_EQ(0, CSSNodeLayoutGetTop(root_child0));
  ASSERT_FLOAT_EQ(100, CSSNodeLayoutGetWidth(root_child0));
  ASSERT_FLOAT_EQ(80, CSSNodeLayoutGetHeight(root_child0));

  ASSERT_FLOAT_EQ(0, CSSNodeLayoutGetLeft(root_child1));
  ASSERT_FLOAT_EQ(80, CSSNodeLayoutGetTop(root_child1));
  ASSERT_FLOAT_EQ(100, CSSNodeLayoutGetWidth(root_child1));
  ASSERT_FLOAT_EQ(20, CSSNodeLayoutGetHeight(root_child1));

  CSSNodeCalculateLayout(root, YGUndefined, YGUndefined, YGDirectionRTL);

  ASSERT_FLOAT_EQ(0, CSSNodeLayoutGetLeft(root));
  ASSERT_FLOAT_EQ(0, CSSNodeLayoutGetTop(root));
  ASSERT_FLOAT_EQ(100, CSSNodeLayoutGetWidth(root));
  ASSERT_FLOAT_EQ(100, CSSNodeLayoutGetHeight(root));

  ASSERT_FLOAT_EQ(0, CSSNodeLayoutGetLeft(root_child0));
  ASSERT_FLOAT_EQ(0, CSSNodeLayoutGetTop(root_child0));
  ASSERT_FLOAT_EQ(100, CSSNodeLayoutGetWidth(root_child0));
  ASSERT_FLOAT_EQ(80, CSSNodeLayoutGetHeight(root_child0));

  ASSERT_FLOAT_EQ(0, CSSNodeLayoutGetLeft(root_child1));
  ASSERT_FLOAT_EQ(80, CSSNodeLayoutGetTop(root_child1));
  ASSERT_FLOAT_EQ(100, CSSNodeLayoutGetWidth(root_child1));
  ASSERT_FLOAT_EQ(20, CSSNodeLayoutGetHeight(root_child1));

  CSSNodeFreeRecursive(root);
}

TEST(CSSLayoutTest, min_width) {
  const CSSNodeRef root = CSSNodeNew();
  CSSNodeStyleSetFlexDirection(root, YGFlexDirectionRow);
  CSSNodeStyleSetWidth(root, 100);
  CSSNodeStyleSetHeight(root, 100);

  const CSSNodeRef root_child0 = CSSNodeNew();
  CSSNodeStyleSetFlexGrow(root_child0, 1);
  CSSNodeStyleSetMinWidth(root_child0, 60);
  CSSNodeInsertChild(root, root_child0, 0);

  const CSSNodeRef root_child1 = CSSNodeNew();
  CSSNodeStyleSetFlexGrow(root_child1, 1);
  CSSNodeInsertChild(root, root_child1, 1);
  CSSNodeCalculateLayout(root, YGUndefined, YGUndefined, YGDirectionLTR);

  ASSERT_FLOAT_EQ(0, CSSNodeLayoutGetLeft(root));
  ASSERT_FLOAT_EQ(0, CSSNodeLayoutGetTop(root));
  ASSERT_FLOAT_EQ(100, CSSNodeLayoutGetWidth(root));
  ASSERT_FLOAT_EQ(100, CSSNodeLayoutGetHeight(root));

  ASSERT_FLOAT_EQ(0, CSSNodeLayoutGetLeft(root_child0));
  ASSERT_FLOAT_EQ(0, CSSNodeLayoutGetTop(root_child0));
  ASSERT_FLOAT_EQ(80, CSSNodeLayoutGetWidth(root_child0));
  ASSERT_FLOAT_EQ(100, CSSNodeLayoutGetHeight(root_child0));

  ASSERT_FLOAT_EQ(80, CSSNodeLayoutGetLeft(root_child1));
  ASSERT_FLOAT_EQ(0, CSSNodeLayoutGetTop(root_child1));
  ASSERT_FLOAT_EQ(20, CSSNodeLayoutGetWidth(root_child1));
  ASSERT_FLOAT_EQ(100, CSSNodeLayoutGetHeight(root_child1));

  CSSNodeCalculateLayout(root, YGUndefined, YGUndefined, YGDirectionRTL);

  ASSERT_FLOAT_EQ(0, CSSNodeLayoutGetLeft(root));
  ASSERT_FLOAT_EQ(0, CSSNodeLayoutGetTop(root));
  ASSERT_FLOAT_EQ(100, CSSNodeLayoutGetWidth(root));
  ASSERT_FLOAT_EQ(100, CSSNodeLayoutGetHeight(root));

  ASSERT_FLOAT_EQ(20, CSSNodeLayoutGetLeft(root_child0));
  ASSERT_FLOAT_EQ(0, CSSNodeLayoutGetTop(root_child0));
  ASSERT_FLOAT_EQ(80, CSSNodeLayoutGetWidth(root_child0));
  ASSERT_FLOAT_EQ(100, CSSNodeLayoutGetHeight(root_child0));

  ASSERT_FLOAT_EQ(0, CSSNodeLayoutGetLeft(root_child1));
  ASSERT_FLOAT_EQ(0, CSSNodeLayoutGetTop(root_child1));
  ASSERT_FLOAT_EQ(20, CSSNodeLayoutGetWidth(root_child1));
  ASSERT_FLOAT_EQ(100, CSSNodeLayoutGetHeight(root_child1));

  CSSNodeFreeRecursive(root);
}

TEST(CSSLayoutTest, justify_content_min_max) {
  const CSSNodeRef root = CSSNodeNew();
  CSSNodeStyleSetJustifyContent(root, YGJustifyCenter);
  CSSNodeStyleSetWidth(root, 100);
  CSSNodeStyleSetMinHeight(root, 100);
  CSSNodeStyleSetMaxHeight(root, 200);

  const CSSNodeRef root_child0 = CSSNodeNew();
  CSSNodeStyleSetWidth(root_child0, 60);
  CSSNodeStyleSetHeight(root_child0, 60);
  CSSNodeInsertChild(root, root_child0, 0);
  CSSNodeCalculateLayout(root, YGUndefined, YGUndefined, YGDirectionLTR);

  ASSERT_FLOAT_EQ(0, CSSNodeLayoutGetLeft(root));
  ASSERT_FLOAT_EQ(0, CSSNodeLayoutGetTop(root));
  ASSERT_FLOAT_EQ(100, CSSNodeLayoutGetWidth(root));
  ASSERT_FLOAT_EQ(100, CSSNodeLayoutGetHeight(root));

  ASSERT_FLOAT_EQ(0, CSSNodeLayoutGetLeft(root_child0));
  ASSERT_FLOAT_EQ(20, CSSNodeLayoutGetTop(root_child0));
  ASSERT_FLOAT_EQ(60, CSSNodeLayoutGetWidth(root_child0));
  ASSERT_FLOAT_EQ(60, CSSNodeLayoutGetHeight(root_child0));

  CSSNodeCalculateLayout(root, YGUndefined, YGUndefined, YGDirectionRTL);

  ASSERT_FLOAT_EQ(0, CSSNodeLayoutGetLeft(root));
  ASSERT_FLOAT_EQ(0, CSSNodeLayoutGetTop(root));
  ASSERT_FLOAT_EQ(100, CSSNodeLayoutGetWidth(root));
  ASSERT_FLOAT_EQ(100, CSSNodeLayoutGetHeight(root));

  ASSERT_FLOAT_EQ(40, CSSNodeLayoutGetLeft(root_child0));
  ASSERT_FLOAT_EQ(20, CSSNodeLayoutGetTop(root_child0));
  ASSERT_FLOAT_EQ(60, CSSNodeLayoutGetWidth(root_child0));
  ASSERT_FLOAT_EQ(60, CSSNodeLayoutGetHeight(root_child0));

  CSSNodeFreeRecursive(root);
}

TEST(CSSLayoutTest, align_items_min_max) {
  const CSSNodeRef root = CSSNodeNew();
  CSSNodeStyleSetAlignItems(root, YGAlignCenter);
  CSSNodeStyleSetMinWidth(root, 100);
  CSSNodeStyleSetMaxWidth(root, 200);
  CSSNodeStyleSetHeight(root, 100);

  const CSSNodeRef root_child0 = CSSNodeNew();
  CSSNodeStyleSetWidth(root_child0, 60);
  CSSNodeStyleSetHeight(root_child0, 60);
  CSSNodeInsertChild(root, root_child0, 0);
  CSSNodeCalculateLayout(root, YGUndefined, YGUndefined, YGDirectionLTR);

  ASSERT_FLOAT_EQ(0, CSSNodeLayoutGetLeft(root));
  ASSERT_FLOAT_EQ(0, CSSNodeLayoutGetTop(root));
  ASSERT_FLOAT_EQ(100, CSSNodeLayoutGetWidth(root));
  ASSERT_FLOAT_EQ(100, CSSNodeLayoutGetHeight(root));

  ASSERT_FLOAT_EQ(20, CSSNodeLayoutGetLeft(root_child0));
  ASSERT_FLOAT_EQ(0, CSSNodeLayoutGetTop(root_child0));
  ASSERT_FLOAT_EQ(60, CSSNodeLayoutGetWidth(root_child0));
  ASSERT_FLOAT_EQ(60, CSSNodeLayoutGetHeight(root_child0));

  CSSNodeCalculateLayout(root, YGUndefined, YGUndefined, YGDirectionRTL);

  ASSERT_FLOAT_EQ(0, CSSNodeLayoutGetLeft(root));
  ASSERT_FLOAT_EQ(0, CSSNodeLayoutGetTop(root));
  ASSERT_FLOAT_EQ(100, CSSNodeLayoutGetWidth(root));
  ASSERT_FLOAT_EQ(100, CSSNodeLayoutGetHeight(root));

  ASSERT_FLOAT_EQ(20, CSSNodeLayoutGetLeft(root_child0));
  ASSERT_FLOAT_EQ(0, CSSNodeLayoutGetTop(root_child0));
  ASSERT_FLOAT_EQ(60, CSSNodeLayoutGetWidth(root_child0));
  ASSERT_FLOAT_EQ(60, CSSNodeLayoutGetHeight(root_child0));

  CSSNodeFreeRecursive(root);
}

TEST(CSSLayoutTest, justify_content_overflow_min_max) {
  const CSSNodeRef root = CSSNodeNew();
  CSSNodeStyleSetJustifyContent(root, YGJustifyCenter);
  CSSNodeStyleSetMinHeight(root, 100);
  CSSNodeStyleSetMaxHeight(root, 110);

  const CSSNodeRef root_child0 = CSSNodeNew();
  CSSNodeStyleSetWidth(root_child0, 50);
  CSSNodeStyleSetHeight(root_child0, 50);
  CSSNodeInsertChild(root, root_child0, 0);

  const CSSNodeRef root_child1 = CSSNodeNew();
  CSSNodeStyleSetWidth(root_child1, 50);
  CSSNodeStyleSetHeight(root_child1, 50);
  CSSNodeInsertChild(root, root_child1, 1);

  const CSSNodeRef root_child2 = CSSNodeNew();
  CSSNodeStyleSetWidth(root_child2, 50);
  CSSNodeStyleSetHeight(root_child2, 50);
  CSSNodeInsertChild(root, root_child2, 2);
  CSSNodeCalculateLayout(root, YGUndefined, YGUndefined, YGDirectionLTR);

  ASSERT_FLOAT_EQ(0, CSSNodeLayoutGetLeft(root));
  ASSERT_FLOAT_EQ(0, CSSNodeLayoutGetTop(root));
  ASSERT_FLOAT_EQ(50, CSSNodeLayoutGetWidth(root));
  ASSERT_FLOAT_EQ(110, CSSNodeLayoutGetHeight(root));

  ASSERT_FLOAT_EQ(0, CSSNodeLayoutGetLeft(root_child0));
  ASSERT_FLOAT_EQ(-20, CSSNodeLayoutGetTop(root_child0));
  ASSERT_FLOAT_EQ(50, CSSNodeLayoutGetWidth(root_child0));
  ASSERT_FLOAT_EQ(50, CSSNodeLayoutGetHeight(root_child0));

  ASSERT_FLOAT_EQ(0, CSSNodeLayoutGetLeft(root_child1));
  ASSERT_FLOAT_EQ(30, CSSNodeLayoutGetTop(root_child1));
  ASSERT_FLOAT_EQ(50, CSSNodeLayoutGetWidth(root_child1));
  ASSERT_FLOAT_EQ(50, CSSNodeLayoutGetHeight(root_child1));

  ASSERT_FLOAT_EQ(0, CSSNodeLayoutGetLeft(root_child2));
  ASSERT_FLOAT_EQ(80, CSSNodeLayoutGetTop(root_child2));
  ASSERT_FLOAT_EQ(50, CSSNodeLayoutGetWidth(root_child2));
  ASSERT_FLOAT_EQ(50, CSSNodeLayoutGetHeight(root_child2));

  CSSNodeCalculateLayout(root, YGUndefined, YGUndefined, YGDirectionRTL);

  ASSERT_FLOAT_EQ(0, CSSNodeLayoutGetLeft(root));
  ASSERT_FLOAT_EQ(0, CSSNodeLayoutGetTop(root));
  ASSERT_FLOAT_EQ(50, CSSNodeLayoutGetWidth(root));
  ASSERT_FLOAT_EQ(110, CSSNodeLayoutGetHeight(root));

  ASSERT_FLOAT_EQ(0, CSSNodeLayoutGetLeft(root_child0));
  ASSERT_FLOAT_EQ(-20, CSSNodeLayoutGetTop(root_child0));
  ASSERT_FLOAT_EQ(50, CSSNodeLayoutGetWidth(root_child0));
  ASSERT_FLOAT_EQ(50, CSSNodeLayoutGetHeight(root_child0));

  ASSERT_FLOAT_EQ(0, CSSNodeLayoutGetLeft(root_child1));
  ASSERT_FLOAT_EQ(30, CSSNodeLayoutGetTop(root_child1));
  ASSERT_FLOAT_EQ(50, CSSNodeLayoutGetWidth(root_child1));
  ASSERT_FLOAT_EQ(50, CSSNodeLayoutGetHeight(root_child1));

  ASSERT_FLOAT_EQ(0, CSSNodeLayoutGetLeft(root_child2));
  ASSERT_FLOAT_EQ(80, CSSNodeLayoutGetTop(root_child2));
  ASSERT_FLOAT_EQ(50, CSSNodeLayoutGetWidth(root_child2));
  ASSERT_FLOAT_EQ(50, CSSNodeLayoutGetHeight(root_child2));

  CSSNodeFreeRecursive(root);
}

TEST(CSSLayoutTest, flex_grow_within_max_width) {
  const CSSNodeRef root = CSSNodeNew();
  CSSNodeStyleSetWidth(root, 200);
  CSSNodeStyleSetHeight(root, 100);

  const CSSNodeRef root_child0 = CSSNodeNew();
  CSSNodeStyleSetFlexDirection(root_child0, YGFlexDirectionRow);
  CSSNodeStyleSetMaxWidth(root_child0, 100);
  CSSNodeInsertChild(root, root_child0, 0);

  const CSSNodeRef root_child0_child0 = CSSNodeNew();
  CSSNodeStyleSetFlexGrow(root_child0_child0, 1);
  CSSNodeStyleSetHeight(root_child0_child0, 20);
  CSSNodeInsertChild(root_child0, root_child0_child0, 0);
  CSSNodeCalculateLayout(root, YGUndefined, YGUndefined, YGDirectionLTR);

  ASSERT_FLOAT_EQ(0, CSSNodeLayoutGetLeft(root));
  ASSERT_FLOAT_EQ(0, CSSNodeLayoutGetTop(root));
  ASSERT_FLOAT_EQ(200, CSSNodeLayoutGetWidth(root));
  ASSERT_FLOAT_EQ(100, CSSNodeLayoutGetHeight(root));

  ASSERT_FLOAT_EQ(0, CSSNodeLayoutGetLeft(root_child0));
  ASSERT_FLOAT_EQ(0, CSSNodeLayoutGetTop(root_child0));
  ASSERT_FLOAT_EQ(100, CSSNodeLayoutGetWidth(root_child0));
  ASSERT_FLOAT_EQ(20, CSSNodeLayoutGetHeight(root_child0));

  ASSERT_FLOAT_EQ(0, CSSNodeLayoutGetLeft(root_child0_child0));
  ASSERT_FLOAT_EQ(0, CSSNodeLayoutGetTop(root_child0_child0));
  ASSERT_FLOAT_EQ(100, CSSNodeLayoutGetWidth(root_child0_child0));
  ASSERT_FLOAT_EQ(20, CSSNodeLayoutGetHeight(root_child0_child0));

  CSSNodeCalculateLayout(root, YGUndefined, YGUndefined, YGDirectionRTL);

  ASSERT_FLOAT_EQ(0, CSSNodeLayoutGetLeft(root));
  ASSERT_FLOAT_EQ(0, CSSNodeLayoutGetTop(root));
  ASSERT_FLOAT_EQ(200, CSSNodeLayoutGetWidth(root));
  ASSERT_FLOAT_EQ(100, CSSNodeLayoutGetHeight(root));

  ASSERT_FLOAT_EQ(100, CSSNodeLayoutGetLeft(root_child0));
  ASSERT_FLOAT_EQ(0, CSSNodeLayoutGetTop(root_child0));
  ASSERT_FLOAT_EQ(100, CSSNodeLayoutGetWidth(root_child0));
  ASSERT_FLOAT_EQ(20, CSSNodeLayoutGetHeight(root_child0));

  ASSERT_FLOAT_EQ(0, CSSNodeLayoutGetLeft(root_child0_child0));
  ASSERT_FLOAT_EQ(0, CSSNodeLayoutGetTop(root_child0_child0));
  ASSERT_FLOAT_EQ(100, CSSNodeLayoutGetWidth(root_child0_child0));
  ASSERT_FLOAT_EQ(20, CSSNodeLayoutGetHeight(root_child0_child0));

  CSSNodeFreeRecursive(root);
}

TEST(CSSLayoutTest, flex_grow_within_constrained_max_width) {
  const CSSNodeRef root = CSSNodeNew();
  CSSNodeStyleSetWidth(root, 200);
  CSSNodeStyleSetHeight(root, 100);

  const CSSNodeRef root_child0 = CSSNodeNew();
  CSSNodeStyleSetFlexDirection(root_child0, YGFlexDirectionRow);
  CSSNodeStyleSetMaxWidth(root_child0, 300);
  CSSNodeInsertChild(root, root_child0, 0);

  const CSSNodeRef root_child0_child0 = CSSNodeNew();
  CSSNodeStyleSetFlexGrow(root_child0_child0, 1);
  CSSNodeStyleSetHeight(root_child0_child0, 20);
  CSSNodeInsertChild(root_child0, root_child0_child0, 0);
  CSSNodeCalculateLayout(root, YGUndefined, YGUndefined, YGDirectionLTR);

  ASSERT_FLOAT_EQ(0, CSSNodeLayoutGetLeft(root));
  ASSERT_FLOAT_EQ(0, CSSNodeLayoutGetTop(root));
  ASSERT_FLOAT_EQ(200, CSSNodeLayoutGetWidth(root));
  ASSERT_FLOAT_EQ(100, CSSNodeLayoutGetHeight(root));

  ASSERT_FLOAT_EQ(0, CSSNodeLayoutGetLeft(root_child0));
  ASSERT_FLOAT_EQ(0, CSSNodeLayoutGetTop(root_child0));
  ASSERT_FLOAT_EQ(200, CSSNodeLayoutGetWidth(root_child0));
  ASSERT_FLOAT_EQ(20, CSSNodeLayoutGetHeight(root_child0));

  ASSERT_FLOAT_EQ(0, CSSNodeLayoutGetLeft(root_child0_child0));
  ASSERT_FLOAT_EQ(0, CSSNodeLayoutGetTop(root_child0_child0));
  ASSERT_FLOAT_EQ(200, CSSNodeLayoutGetWidth(root_child0_child0));
  ASSERT_FLOAT_EQ(20, CSSNodeLayoutGetHeight(root_child0_child0));

  CSSNodeCalculateLayout(root, YGUndefined, YGUndefined, YGDirectionRTL);

  ASSERT_FLOAT_EQ(0, CSSNodeLayoutGetLeft(root));
  ASSERT_FLOAT_EQ(0, CSSNodeLayoutGetTop(root));
  ASSERT_FLOAT_EQ(200, CSSNodeLayoutGetWidth(root));
  ASSERT_FLOAT_EQ(100, CSSNodeLayoutGetHeight(root));

  ASSERT_FLOAT_EQ(0, CSSNodeLayoutGetLeft(root_child0));
  ASSERT_FLOAT_EQ(0, CSSNodeLayoutGetTop(root_child0));
  ASSERT_FLOAT_EQ(200, CSSNodeLayoutGetWidth(root_child0));
  ASSERT_FLOAT_EQ(20, CSSNodeLayoutGetHeight(root_child0));

  ASSERT_FLOAT_EQ(0, CSSNodeLayoutGetLeft(root_child0_child0));
  ASSERT_FLOAT_EQ(0, CSSNodeLayoutGetTop(root_child0_child0));
  ASSERT_FLOAT_EQ(200, CSSNodeLayoutGetWidth(root_child0_child0));
  ASSERT_FLOAT_EQ(20, CSSNodeLayoutGetHeight(root_child0_child0));

  CSSNodeFreeRecursive(root);
}
